stages: # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-job: # This job runs in the build stage, which runs first.
  stage: build
  script:
    - docker-compose build
    - echo "Containers built."

unit-test-job: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  script:
    - docker-compose up -d
    - echo "Running unit tests..."
    - docker exec -it docker-fastapi pytest -s
    - docker-compose down

lint-test-job: # This job also runs in the test stage.
  stage: test # It can run at the same time as unit-test-job (in parallel).
  script:
    - docker-compose up -d
    - echo "Linting code..."
    - docker exec -it docker-fastapi pip install pylint
    - docker exec -it docker-fastapi pylint /home/fastapi/app/api/project
    - docker-compose down

deploy-job: # This job runs in the deploy stage.
  stage: deploy # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
